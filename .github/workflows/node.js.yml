name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest  

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Cache Server node_modules
      uses: actions/cache@v2
      with:
        path: Server/node_modules
        key: ${{ runner.os }}-server-${{ hashFiles('Server/package-lock.json') }}
        restore-keys: ${{ runner.os }}-server-
    
    - name: Cache Client node_modules
      uses: actions/cache@v2
      with:
        path: Client/node_modules
        key: ${{ runner.os }}-client-${{ hashFiles('Client/package-lock.json') }}
        restore-keys: ${{ runner.os }}-client-

    - name: Install Server Dependencies
      run: npm ci
      working-directory: Server
    
    - name: Install Client Dependencies
      run: npm ci
      working-directory: Client
    
    - name: Build Server
      run: npm run build --if-present
      working-directory: Server
    
    - name: Build Client
      run: npm run build
      working-directory: Client
    
    - name: Run Server Tests
      run: npm test
      working-directory: Server

    # Client tests for when we have testing set up DO NOT TOUCH pls
    #- name: Run Client Tests
    #  run: npm test
    #  working-directory: Client
    #  env:
    #    CI: true # This environment variable prevents the React test runner from launching a watch mode
